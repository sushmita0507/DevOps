1. configure username
        git config --global user.name "Sushmita Uddanna"
2. configure email
        git config --global user.email "sush@example.com"
3. list configure
        git config --list
4. Clone the Repository
        git clone url
        git clone -b <existing_branch_name> <url>
5. create new git project/repo
        git init - empty repo with .git file
6. create/delete/rename branch
        git branch <branch_name>
        git checkout -b <branch_name>
        git branch - present working branch
        git branch -m old_branch_name new_branch_name -rename
        git branch -d branch_name -delete
        git branch -a  -list
7. Link Your Local Repository to GitHub
        git remote add origin https://github.com/yourusername/your-repo.git
8. Push to Remote Repository 
        git add . (. represents all)
        git commit -m "commit message"
        git push origin branch_name / git push origin branch_name --set-upstream origin branch_name
9. Check recent change in file or directory(complete list)
        git diff
        git diff file_name 
        git diff commit_id1 commit_id2
10. Display recent 10 commits
        git log
        git log --author="Sushmita Uddanna" (case sensitive)
        git log --oneline
11. Pull latest code from main
        git pull origin main
        git pull --all -pull latest branches, tags etc..
12. Switch to other branch
        git switch branch_name
        git checkout branch_name
13. Merge feature branch with main branch
        git merge feature_branch_name (present working branch - main)
        git merge main -m "merge message"
14. Revert to previous commit 
        git revert commit_id - revert to prevoius commit with new commit change
        git reset commit_id - revert to previous commit without commit - Local
        git reset --soft commit_id - revert commit history
        git reset --hard commit_id -revert commit changes with history
        git revert head -uncommit latest changes
15. Save the changes temporarily
        git stash
        git stash list
        git stash apply
        git stash drop -delete the stash after apply
        git stash -a -add new files/untracked
        git stash pop -remove new files/untracked
        git stash save "text message"
        git stash show stash@{index}  -only for tracked files
        git stash apply stash@{index}
        git stash pop stash@{index} -delete particular stash